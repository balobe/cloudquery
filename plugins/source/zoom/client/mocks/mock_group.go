// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/zoom/client (interfaces: GroupService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	zoom "github.com/himalayan-institute/zoom-lib-golang"
)

// MockGroupService is a mock of GroupService interface.
type MockGroupService struct {
	ctrl     *gomock.Controller
	recorder *MockGroupServiceMockRecorder
}

// MockGroupServiceMockRecorder is the mock recorder for MockGroupService.
type MockGroupServiceMockRecorder struct {
	mock *MockGroupService
}

// NewMockGroupService creates a new mock instance.
func NewMockGroupService(ctrl *gomock.Controller) *MockGroupService {
	mock := &MockGroupService{ctrl: ctrl}
	mock.recorder = &MockGroupServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupService) EXPECT() *MockGroupServiceMockRecorder {
	return m.recorder
}

// ListGroupMembers mocks base method.
func (m *MockGroupService) ListGroupMembers(arg0 zoom.ListGroupMembersOptions) (zoom.ListGroupMembersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroupMembers", arg0)
	ret0, _ := ret[0].(zoom.ListGroupMembersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGroupMembers indicates an expected call of ListGroupMembers.
func (mr *MockGroupServiceMockRecorder) ListGroupMembers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroupMembers", reflect.TypeOf((*MockGroupService)(nil).ListGroupMembers), arg0)
}

// ListGroups mocks base method.
func (m *MockGroupService) ListGroups() (zoom.ListGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroups")
	ret0, _ := ret[0].(zoom.ListGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGroups indicates an expected call of ListGroups.
func (mr *MockGroupServiceMockRecorder) ListGroups() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroups", reflect.TypeOf((*MockGroupService)(nil).ListGroups))
}
