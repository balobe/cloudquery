// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cloudquery/plugins/source/zoom/client (interfaces: RoleService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	zoom "github.com/himalayan-institute/zoom-lib-golang"
)

// MockRoleService is a mock of RoleService interface.
type MockRoleService struct {
	ctrl     *gomock.Controller
	recorder *MockRoleServiceMockRecorder
}

// MockRoleServiceMockRecorder is the mock recorder for MockRoleService.
type MockRoleServiceMockRecorder struct {
	mock *MockRoleService
}

// NewMockRoleService creates a new mock instance.
func NewMockRoleService(ctrl *gomock.Controller) *MockRoleService {
	mock := &MockRoleService{ctrl: ctrl}
	mock.recorder = &MockRoleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoleService) EXPECT() *MockRoleServiceMockRecorder {
	return m.recorder
}

// GetRole mocks base method.
func (m *MockRoleService) GetRole(arg0 zoom.GetRoleOpts) (zoom.Role, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRole", arg0)
	ret0, _ := ret[0].(zoom.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRole indicates an expected call of GetRole.
func (mr *MockRoleServiceMockRecorder) GetRole(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRole", reflect.TypeOf((*MockRoleService)(nil).GetRole), arg0)
}

// ListRoleMembers mocks base method.
func (m *MockRoleService) ListRoleMembers(arg0 zoom.ListRoleMembersOptions) (zoom.ListRoleMembersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRoleMembers", arg0)
	ret0, _ := ret[0].(zoom.ListRoleMembersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoleMembers indicates an expected call of ListRoleMembers.
func (mr *MockRoleServiceMockRecorder) ListRoleMembers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoleMembers", reflect.TypeOf((*MockRoleService)(nil).ListRoleMembers), arg0)
}

// ListRoles mocks base method.
func (m *MockRoleService) ListRoles() (zoom.ListRolesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRoles")
	ret0, _ := ret[0].(zoom.ListRolesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoles indicates an expected call of ListRoles.
func (mr *MockRoleServiceMockRecorder) ListRoles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoles", reflect.TypeOf((*MockRoleService)(nil).ListRoles))
}
