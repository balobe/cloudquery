package codepipeline

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/plugin-sdk/schema"
)

func Webhooks() *schema.Table {
	return &schema.Table{
		Name:        "aws_codepipeline_webhooks",
		Description: "The detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN",
		Resolver:    fetchCodepipelineWebhooks,
		Multiplex:   client.ServiceAccountRegionMultiplexer("codepipeline"),
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Description: "The AWS Account ID of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
			},
			{
				Name:        "region",
				Description: "The AWS Region of the resource.",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
			},
			{
				Name:     "definition",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("Definition"),
			},
			{
				Name:        "url",
				Description: "A unique URL generated by CodePipeline",
				Type:        schema.TypeString,
			},
			{
				Name:            "arn",
				Description:     "The Amazon Resource Name (ARN) of the webhook",
				Type:            schema.TypeString,
				CreationOptions: schema.ColumnCreationOptions{PrimaryKey: true},
			},
			{
				Name:        "error_code",
				Description: "The number code of the error",
				Type:        schema.TypeString,
			},
			{
				Name:        "error_message",
				Description: "The text of the error message about the webhook",
				Type:        schema.TypeString,
			},
			{
				Name:        "last_triggered",
				Description: "The date and time a webhook was last successfully triggered, in timestamp format",
				Type:        schema.TypeTimestamp,
			},
			{
				Name:        "tags",
				Description: "The tags associated with the webhook",
				Type:        schema.TypeJSON,
				Resolver:    client.ResolveTags,
			},
		},
	}
}

// ====================================================================================================================
//                                               Table Resolver Functions
// ====================================================================================================================

func fetchCodepipelineWebhooks(ctx context.Context, meta schema.ClientMeta, parent *schema.Resource, res chan<- interface{}) error {
	c := meta.(*client.Client)
	svc := c.Services().CodePipeline
	config := codepipeline.ListWebhooksInput{}
	for {
		response, err := svc.ListWebhooks(ctx, &config)
		if err != nil {
			return err
		}
		res <- response.Webhooks

		if aws.ToString(response.NextToken) == "" {
			break
		}
		config.NextToken = response.NextToken
	}
	return nil
}
